[package]
name = "frontier-template-runtime"
version = "0.0.0"
license = "Unlicense"
description = "A fresh FRAME-based Substrate runtime, ready for hacking."
publish = false
authors = { workspace = true }
edition = { workspace = true }
repository = { workspace = true }

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
scale-codec = { workspace = true, default-features = false }
scale-info = { workspace = true, default-features = false }

# Substrate
sp-api = { workspace = true, default-features = false }
sp-block-builder = { workspace = true, default-features = false }
sp-consensus-aura = { workspace = true, default-features = false }
sp-consensus-grandpa = { workspace = true, default-features = false }
sp-core = { workspace = true, default-features = false }
sp-genesis-builder = { workspace = true, default-features = false }
sp-inherents = { workspace = true, default-features = false }
sp-offchain = { workspace = true, default-features = false }
sp-runtime = { workspace = true, default-features = false }
sp-session = { workspace = true, default-features = false }
sp-transaction-pool = { workspace = true, default-features = false }
sp-version = { workspace = true, default-features = false }
# Substrate FRAME
frame-benchmarking = { workspace = true, optional = true, default-features = false }
frame-executive = { workspace = true, default-features = false }
frame-support = { workspace = true, features = ["experimental"], default-features = false }
frame-system = { workspace = true, default-features = false }
frame-system-benchmarking = { workspace = true, optional = true }
frame-system-rpc-runtime-api = { workspace = true, default-features = false }
pallet-aura = { workspace = true, default-features = false }
pallet-balances = { workspace = true, features = ["insecure_zero_ed"], default-features = false }
pallet-grandpa = { workspace = true, default-features = false }
pallet-sudo = { workspace = true, default-features = false }
pallet-timestamp = { workspace = true, default-features = false }
pallet-transaction-payment = { workspace = true, default-features = false }
pallet-transaction-payment-rpc-runtime-api = { workspace = true, default-features = false }

# Frontier
fp-account = { workspace = true, features = ["serde"], default-features = false }
fp-evm = { workspace = true, features = ["serde"], default-features = false }
fp-rpc = { workspace = true, default-features = false }
fp-self-contained = { workspace = true, features = ["serde"], default-features = false }
# Frontier FRAME
pallet-base-fee = { workspace = true, default-features = false }
pallet-dynamic-fee = { workspace = true, default-features = false }
pallet-ethereum = { workspace = true, default-features = false }
pallet-evm = { workspace = true, default-features = false }
pallet-evm-chain-id = { workspace = true, default-features = false }
pallet-evm-precompile-modexp = { workspace = true, default-features = false }
pallet-evm-precompile-sha3fips = { workspace = true, default-features = false }
pallet-evm-precompile-simple = { workspace = true, default-features = false }

# Cumulus primitives
cumulus-pallet-weight-reclaim = { workspace = true, default-features = false }

[build-dependencies]
substrate-wasm-builder = { workspace = true, optional = true, default-features = false }

[features]
default = ["std", "with-rocksdb-weights"]
with-rocksdb-weights = []
with-paritydb-weights = []
std = [
	"scale-codec/std",
	"scale-info/std",
	# Substrate
	"sp-api/std",
	"sp-block-builder/std",
	"sp-consensus-aura/std",
	"sp-consensus-grandpa/std",
	"sp-core/std",
	"sp-genesis-builder/std",
	"sp-inherents/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-transaction-pool/std",
	"sp-version/std",
	"substrate-wasm-builder",
	# Substrate FRAME
	"frame-benchmarking/std",
	"frame-executive/std",
	"frame-support/std",
	"frame-system/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system-benchmarking?/std",
	"pallet-aura/std",
	"pallet-balances/std",
	"pallet-grandpa/std",
	"pallet-sudo/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	# Frontier
	"fp-account/std",
	"fp-evm/std",
	"fp-rpc/std",
	"fp-self-contained/std",
	# Frontier FRAME
	"pallet-base-fee/std",
	"pallet-dynamic-fee/std",
	"pallet-ethereum/std",
	"pallet-evm/std",
	"pallet-evm-chain-id/std",
	"pallet-evm-precompile-modexp/std",
	"pallet-evm-precompile-sha3fips/std",
	"pallet-evm-precompile-simple/std",
	# Cumulus primitives
	"cumulus-pallet-weight-reclaim/std",
]
runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-grandpa/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-sudo/runtime-benchmarks",
	"pallet-ethereum/runtime-benchmarks",
	"pallet-evm/runtime-benchmarks",
]
